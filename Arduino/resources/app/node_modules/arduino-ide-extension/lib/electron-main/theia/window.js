"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.load = void 0;
const electron_1 = require("@theia/core/electron-shared/electron");
const disposable_1 = require("@theia/core/lib/common/disposable");
const event_utils_1 = require("@theia/core/lib/electron-main/event-utils");
const startup_task_1 = require("../../electron-common/startup-task");
/**
 * Should be used to load (URL) or reload a window. The returning promise will resolve
 * when the app is ready to receive startup tasks.
 */
async function load(electronWindow, doLoad) {
    const { id } = electronWindow;
    const toDispose = new disposable_1.DisposableCollection();
    const channel = startup_task_1.StartupTask.Messaging.APP_READY_SIGNAL(id);
    return new Promise((resolve, reject) => {
        toDispose.push((0, event_utils_1.createDisposableListener)(electron_1.ipcMain, channel, ({ sender: webContents }) => {
            if (webContents.id === electronWindow.webContents.id) {
                resolve(electronWindow);
            }
        }));
        Promise.resolve(doLoad(electronWindow)).catch(reject);
    }).finally(() => toDispose.dispose());
}
exports.load = load;
//# sourceMappingURL=window.js.map
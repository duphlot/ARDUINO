"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchInWorkspaceFactory = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const search_in_workspace_factory_1 = require("@theia/search-in-workspace/lib/browser/search-in-workspace-factory");
let SearchInWorkspaceFactory = class SearchInWorkspaceFactory extends search_in_workspace_factory_1.SearchInWorkspaceFactory {
    async createWidget() {
        const viewContainer = await super.createWidget();
        viewContainer.setTitleOptions(Object.assign(Object.assign({}, search_in_workspace_factory_1.SEARCH_VIEW_CONTAINER_TITLE_OPTIONS), { iconClass: 'fa fa-arduino-search' }));
        return viewContainer;
    }
};
SearchInWorkspaceFactory = __decorate([
    (0, inversify_1.injectable)()
], SearchInWorkspaceFactory);
exports.SearchInWorkspaceFactory = SearchInWorkspaceFactory;
//# sourceMappingURL=search-in-workspace-factory.js.map
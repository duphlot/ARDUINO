"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusBarImpl = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const browser_1 = require("@theia/core/lib/browser");
let StatusBarImpl = class StatusBarImpl extends browser_1.StatusBarImpl {
    async removeElement(id) {
        await this.ready;
        if (this.entries.delete(id)) {
            // Unlike Theia, IDE2 updates the status bar only if the element to remove was among the entries. Otherwise, it's a NOOP.
            this.update();
        }
    }
};
StatusBarImpl = __decorate([
    (0, inversify_1.injectable)()
], StatusBarImpl);
exports.StatusBarImpl = StatusBarImpl;
//# sourceMappingURL=status-bar.js.map
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultJsonSchemaContribution = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const json_schema_store_1 = require("@theia/core/lib/browser/json-schema-store");
let DefaultJsonSchemaContribution = class DefaultJsonSchemaContribution extends json_schema_store_1.DefaultJsonSchemaContribution {
    async registerSchemas() {
        // NOOP
        // Do not fetch the https://www.schemastore.org/api/json/catalog.json on every single browser window load.
        // If the schemas are required in the future, we should fetch the `catalog.json` on build time and load it.
    }
};
DefaultJsonSchemaContribution = __decorate([
    (0, inversify_1.injectable)()
], DefaultJsonSchemaContribution);
exports.DefaultJsonSchemaContribution = DefaultJsonSchemaContribution;
//# sourceMappingURL=json-schema-store.js.map
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutputEditorFactory = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const output_editor_factory_1 = require("@theia/output/lib/browser/output-editor-factory");
let OutputEditorFactory = class OutputEditorFactory extends output_editor_factory_1.OutputEditorFactory {
    createOptions(model, defaultOptions) {
        const options = super.createOptions(model, defaultOptions);
        return Object.assign(Object.assign({}, options), { 
            // Taken from https://github.com/microsoft/vscode/blob/35b971c92d210face8c446a1c6f1e470ad2bcb54/src/vs/workbench/contrib/output/browser/outputView.ts#L211-L214
            // To fix https://github.com/arduino/arduino-ide/issues/1210
            unicodeHighlight: {
                nonBasicASCII: false,
                invisibleCharacters: false,
                ambiguousCharacters: false,
            } });
    }
};
OutputEditorFactory = __decorate([
    (0, inversify_1.injectable)()
], OutputEditorFactory);
exports.OutputEditorFactory = OutputEditorFactory;
//# sourceMappingURL=output-editor-factory.js.map
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugFrontendApplicationContribution = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const debug_frontend_application_contribution_1 = require("@theia/debug/lib/browser/debug-frontend-application-contribution");
const arduino_menus_1 = require("../../menu/arduino-menus");
let DebugFrontendApplicationContribution = class DebugFrontendApplicationContribution extends debug_frontend_application_contribution_1.DebugFrontendApplicationContribution {
    constructor() {
        super();
        this.options.defaultWidgetOptions.rank = 4;
    }
    registerMenus(registry) {
        super.registerMenus(registry);
        (0, arduino_menus_1.unregisterSubmenu)(debug_frontend_application_contribution_1.DebugMenus.DEBUG, registry);
    }
};
DebugFrontendApplicationContribution = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], DebugFrontendApplicationContribution);
exports.DebugFrontendApplicationContribution = DebugFrontendApplicationContribution;
//# sourceMappingURL=debug-frontend-application-contribution.js.map
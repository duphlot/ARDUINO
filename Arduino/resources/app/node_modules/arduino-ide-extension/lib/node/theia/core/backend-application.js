"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendApplication = void 0;
const inversify_1 = require("@theia/core/shared/inversify");
const contribution_provider_1 = require("@theia/core/lib/common/contribution-provider");
const backend_application_1 = require("@theia/core/lib/node/backend-application");
let BackendApplication = class BackendApplication extends backend_application_1.BackendApplication {
    constructor(contributionsProvider, cliParams) {
        super(contributionsProvider, cliParams);
        this.contributionsProvider = contributionsProvider;
        this.cliParams = cliParams;
        // Workaround for Electron not installing a handler to ignore SIGPIPE
        // (https://github.com/electron/electron/issues/13254)
        // From VS Code: https://github.com/microsoft/vscode/blob/d0c90c9f3ea8d34912194176241503a44b3abd80/src/bootstrap.js#L31-L37
        process.on('SIGPIPE', () => console.error(new Error('Unexpected SIGPIPE signal.')));
    }
};
BackendApplication = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(contribution_provider_1.ContributionProvider)),
    __param(0, (0, inversify_1.named)(backend_application_1.BackendApplicationContribution)),
    __param(1, (0, inversify_1.inject)(backend_application_1.BackendApplicationCliContribution)),
    __metadata("design:paramtypes", [Object, backend_application_1.BackendApplicationCliContribution])
], BackendApplication);
exports.BackendApplication = BackendApplication;
//# sourceMappingURL=backend-application.js.map
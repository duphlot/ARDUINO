"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rebindNsfwFileSystemWatcher = void 0;
const path_1 = require("path");
const filesystem_backend_module_1 = require("@theia/filesystem/lib/node/filesystem-backend-module");
const filesystem_watcher_protocol_1 = require("@theia/filesystem/lib/common/filesystem-watcher-protocol");
const nsfw_filesystem_service_1 = require("@theia/filesystem/lib/node/nsfw-watcher/nsfw-filesystem-service");
const filesystem_watcher_dispatcher_1 = require("@theia/filesystem/lib/node/filesystem-watcher-dispatcher");
const nsfw_filesystem_service_2 = require("./nsfw-filesystem-service");
function rebindNsfwFileSystemWatcher(rebind) {
    rebind(filesystem_backend_module_1.NsfwFileSystemWatcherServiceProcessOptions).toConstantValue({
        entryPoint: (0, path_1.join)(__dirname, 'index.js'),
    });
    rebind(filesystem_watcher_protocol_1.FileSystemWatcherService)
        .toDynamicValue((context) => filesystem_backend_module_1.NSFW_SINGLE_THREADED
        ? createNsfwFileSystemWatcherService(context)
        : (0, filesystem_backend_module_1.spawnNsfwFileSystemWatcherServiceProcess)(context))
        .inSingletonScope();
}
exports.rebindNsfwFileSystemWatcher = rebindNsfwFileSystemWatcher;
function createNsfwFileSystemWatcherService({ container, }) {
    const options = container.get(nsfw_filesystem_service_1.NsfwFileSystemWatcherServerOptions);
    const dispatcher = container.get(filesystem_watcher_dispatcher_1.FileSystemWatcherServiceDispatcher);
    const server = new nsfw_filesystem_service_2.NoDelayDisposalTimeoutNsfwFileSystemWatcherService(options);
    server.setClient(dispatcher);
    return server;
}
//# sourceMappingURL=nsfw-bindings.js.map